@use '../variables/colors.scss' as colors;
@use '../variables//fonts.scss' as font;
$grid-gutter-widths: (
    default: 0,
    xs: 1rem,
    sm: 2rem,
    md: 2.5rem,
    lg: 3rem,
);

@function gutter($breakpoint) {
    @return map-get($grid-gutter-widths, $breakpoint);
}

@mixin flex-container (
    $direction: column,
    $wrap: wrap,
    $justify:flex-start,
    $align:flex-start,

    ) {
    align-items: $align;
    display: flex;
    flex-direction: $direction;
    flex-wrap: $wrap;
    justify-content: $justify;
}

$margin-sizes: (
    default: 0,
    xs: 2rem,
    top: 1rem,
    auto: auto,
    md: 2rem,
);

@mixin margin($size: sm, $sides: all) {  // Add $sides parameter with default 'all'
    @if $sides == all {
      margin: map-get($margin-sizes, $size);
    } @else if $sides == 'x' {
      margin-left: map-get($margin-sizes, $size);
      margin-right: map-get($margin-sizes, $size);
    } @else if $sides == 'y' {
      margin-top: map-get($margin-sizes, $size);
      margin-bottom: map-get($margin-sizes, $size);
    } @else {
      @each $side in $sides {
        @if $side == top {
          margin-top: map-get($margin-sizes, $size);
        } @else if $side == right {
          margin-right: map-get($margin-sizes, $size);
        } @else if $side == bottom {
          margin-bottom: map-get($margin-sizes, $size);
        } @else if $side == left {
          margin-left: map-get($margin-sizes, $size);
        } @else {
          @warn "Invalid margin side: #{$side}";
        }
      }
    }
  }

$gap-sizes: (
    default: 0,
    xs: 1rem,
    sm: 2rem,
    md: 3rem,
    lg: 4rem,
);

@mixin gap($size: sm) {
    gap: map-get($gap-sizes, $size);
}

@mixin text-align($alignment: left) {
    text-align: $alignment;
}

@mixin button-style(
    $border: none,
    $background: colors.colorTheme(app-red),
    $color: colors.colorTheme(app-white),
    $fontFamily: "Oxanium",
    $padding: 0,
    $text: capitalize,
    $cursor: pointer,
    $radius: 0,
) {
    border: $border;
    border-radius: $radius;
    background-color: $background;
    padding: $padding;
    font-family: $fontFamily;
    text-transform: $text;
    letter-spacing: 0.0675rem;
    cursor: $cursor;
}

@mixin call-action {
    background-color: colors.colorTheme(yellow); 
    color: colors.colorTheme(black);
    border: none;
    font-weight: bold; 
    transition: all 0.3s ease;
    border-radius: 5px;
    font-size: 0.875rem;
    padding: 12px 1rem;
    border-radius: 0;
    align-self: center;
    &:hover {
        background-color: colors.colorTheme(red); 
        color: colors.colorTheme(yellow); 
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2); 
        transform: translateY(-2px);
    }
}

@mixin links (
  $letter: 0.0875rem,
  $decoration: underline,
  $decorationColor: colors.colorTheme(app-yellow),
  $fontFamily: 'Oxanium, serif'
) {
  font-family: $fontFamily;
  letter-spacing: $letter;
  text-decoration: $decoration;
  text-decoration-color: $decorationColor;
  text-underline-offset: 4px;
}